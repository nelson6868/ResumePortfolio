[{"C:\\Users\\NELSON NNACHETA\\Desktop\\NelsonPortfolioWebSite\\Portfolio-with-React\\src\\index.js":"1","C:\\Users\\NELSON NNACHETA\\Desktop\\NelsonPortfolioWebSite\\Portfolio-with-React\\src\\components\\About\\index.js":"2","C:\\Users\\NELSON NNACHETA\\Desktop\\NelsonPortfolioWebSite\\Portfolio-with-React\\src\\components\\Skills\\index.jsx":"3","C:\\Users\\NELSON NNACHETA\\Desktop\\NelsonPortfolioWebSite\\Portfolio-with-React\\src\\components\\Contact\\index.jsx":"4","C:\\Users\\NELSON NNACHETA\\Desktop\\NelsonPortfolioWebSite\\Portfolio-with-React\\src\\components\\Footer\\index.jsx":"5","C:\\Users\\NELSON NNACHETA\\Desktop\\NelsonPortfolioWebSite\\Portfolio-with-React\\src\\components\\Home\\index.jsx":"6","C:\\Users\\NELSON NNACHETA\\Desktop\\NelsonPortfolioWebSite\\Portfolio-with-React\\src\\components\\NavBar\\index.jsx":"7"},{"size":517,"mtime":1642125070127,"results":"8","hashOfConfig":"9"},{"size":1750,"mtime":1642133975756,"results":"10","hashOfConfig":"9"},{"size":948,"mtime":1642125070096,"results":"11","hashOfConfig":"9"},{"size":743,"mtime":1642164192064,"results":"12","hashOfConfig":"9"},{"size":1199,"mtime":1642163687932,"results":"13","hashOfConfig":"9"},{"size":756,"mtime":1642163978908,"results":"14","hashOfConfig":"9"},{"size":3225,"mtime":1642137247057,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8d34u4",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\NELSON NNACHETA\\Desktop\\NelsonPortfolioWebSite\\Portfolio-with-React\\src\\index.js",[],"C:\\Users\\NELSON NNACHETA\\Desktop\\NelsonPortfolioWebSite\\Portfolio-with-React\\src\\components\\About\\index.js",[],"C:\\Users\\NELSON NNACHETA\\Desktop\\NelsonPortfolioWebSite\\Portfolio-with-React\\src\\components\\Skills\\index.jsx",[],"C:\\Users\\NELSON NNACHETA\\Desktop\\NelsonPortfolioWebSite\\Portfolio-with-React\\src\\components\\Contact\\index.jsx",[],"C:\\Users\\NELSON NNACHETA\\Desktop\\NelsonPortfolioWebSite\\Portfolio-with-React\\src\\components\\Footer\\index.jsx",[],"C:\\Users\\NELSON NNACHETA\\Desktop\\NelsonPortfolioWebSite\\Portfolio-with-React\\src\\components\\Home\\index.jsx",["31"],"import { Link} from \"react-router-dom\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"title\">\r\n        <h1>\r\n          <p>Hi,</p>\r\n          <p>I am Ekwom Nelson N</p>\r\n          <p>Software developer</p>\r\n        </h1>\r\n        <Link to=\"about\">\r\n          <button>More Info</button>\r\n        </Link>\r\n        <br/>\r\n\r\n        <a href='nelson.pdf' download='Nelson nelson.pdf'>\r\n                         <button>Get Resume</button>\r\n\r\n                         </a>\r\n      </div>\r\n      <div className=\"person\">\r\n        <img \r\n          src={`${process.env.PUBLIC_URL}/mo-logo1.jpg`}\r\n          alt=\"person picture\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\NELSON NNACHETA\\Desktop\\NelsonPortfolioWebSite\\Portfolio-with-React\\src\\components\\NavBar\\index.jsx",[],{"ruleId":"32","severity":1,"message":"33","line":25,"column":9,"nodeType":"34","endLine":28,"endColumn":11},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]